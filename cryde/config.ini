; [Algo name]
; length = When constant length is expected, like 32 chars for md5
; length_divisors = When length needs to be a mutliple of an integer to be valid, like mutliple of 4 for base64
; unique_symbols_ci = List of unique symbols that NEED to appear, case insensitive
; unique_symbols_cs = List of unique symbols that NEED to appear, case sensitive
; max_unique_symbols_ci_count = Max count of unique symbols that NEED to appear, case insensitive
; max_unique_symbols_cs_count = Max count of unique symbols that NEED to appear, case sensitive
; min_unique_symbols_ci_count = Min count of unique symbols that NEED to appear, case insensitive
; min_unique_symbols_cs_count = Min count of unique symbols that NEED to appear, case sensitive
; possible_bases = Expected bases for characters, like base 16 for md5


; Hash

[md2]
length = 32
possible_bases = 16

[md4]
length = 32
possible_bases = 16

[md5]
length = 32
possible_bases = 16

[md6]
length = 128
possible_bases = 16

[sha-1]
length = 40
possible_bases = 16

[sha-224]
length = 40
possible_bases = 16

[sha-256]
length = 64
possible_bases = 16

[sha-384]
length = 96
possible_bases = 16

[sha-512]
length = 128
possible_bases = 16


; CRC

[CRC-16]
length = 16
possible_bases = 16

[CRC-32]
length = 32
possible_bases = 16

[CRC-64]
length = 64
possible_bases = 16


; Cryptography

[ROT13]
possible_bases = 26

[Vigenere]
possible_bases = 26,36,52,56

[polybe]
max_unique_symbols_ci_count = 25
possible_bases = 26

[Wolseley]
max_unique_symbols_ci_count = 25
possible_bases = 26

[Rail Fence]
possible_bases = 26

[morse]
unique_symbols_ci = -,.
possible_bases = morse

[DES]
length_divisors = 16
possible_bases = 16

[3DES]
length_divisors = 16
possible_bases = 16

[AES]
length_divisors = 32
possible_bases = 16

[TWOFISH]
length_divisors = 32
possible_bases = 16

[MISTY]
length_divisors = 16
possible_bases = 16

; Bases

[Binary]
possible_bases = 2

[Octodecimal]
possible_bases = 8

[Decimal]
possible_bases = 10
length_divisors=2

[Hexadecimal]
possible_bases = 16
length_divisors = 2

[b32]
possible_bases = 32
length_divisors = 8

[b64]
possible_bases = 64
length_divisors = 4
